openapi: 3.0.0
paths:
  /health:
    get:
      operationId: AppController_health
      parameters: []
      responses:
        '200':
          description: ''
  /v1/user:
    post:
      operationId: UserController_createUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags: &ref_0
        - User
    get:
      operationId: UserController_getUser
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags: *ref_0
  /v1/integration_account/check:
    post:
      operationId: IntegrationAccountController_checkCredentialsForIntegrationAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationCheckBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: &ref_1
        - Integration Account
  /v1/integration_account:
    get:
      operationId: IntegrationAccountController_getIntegrationAccounts
      parameters:
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationAccount'
      tags: *ref_1
    post:
      operationId: IntegrationAccountController_createIntegrationAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationAccountBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
      tags: *ref_1
  /v1/integration_account/{integrationAccountId}:
    get:
      operationId: IntegrationAccountController_getIntegrationAccount
      parameters:
        - name: integrationAccountId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
      tags: *ref_1
    post:
      operationId: IntegrationAccountController_updateIntegrationAccount
      parameters:
        - name: integrationAccountId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationAccountBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAccount'
      tags: *ref_1
  /v1/integration_definition:
    get:
      operationId: IntegrationDefinitionController_getIntegrationDefinitionsByWorkspace
      parameters:
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationDefinition'
      tags: &ref_2
        - Integration Definition
  /v1/integration_definition/{integrationDefinitionId}/spec:
    get:
      operationId: IntegrationDefinitionController_getSpecForIntegrationDefinition
      parameters:
        - name: integrationDefinitionId
          required: true
          in: path
          schema:
            type: string
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: *ref_2
  /v1/integration_definition/{integrationDefinitionId}:
    get:
      operationId: IntegrationDefinitionController_getIntegrationDefinitionWithId
      parameters:
        - name: integrationDefinitionId
          required: true
          in: path
          schema:
            type: string
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: *ref_2
  /v1/integration_oauth:
    get:
      operationId: IntegrationOAuthController_getIntegrationOAuthByWorkspace
      parameters:
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationOAuthApp'
      tags: &ref_3
        - Integration OAuth Apps
    post:
      operationId: IntegrationOAuthController_createIntegrationOAuthApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationOAuthCreateBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationOAuthApp'
      tags: *ref_3
  /v1/integration_oauth/{integrationOAuthAppId}:
    post:
      operationId: IntegrationOAuthController_updateIntegrationOAuthApp
      parameters:
        - name: integrationOAuthAppId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationOAuthRequestUpdateBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationOAuthApp'
      tags: *ref_3
    get:
      operationId: IntegrationOAuthController_getIntegrationOAuthApp
      parameters:
        - name: integrationOAuthAppId
          required: true
          in: path
          schema:
            type: string
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationOAuthApp'
      tags: *ref_3
  /v1/integration_connect_link/{integrationConnectLinkId}:
    get:
      operationId: IntegrationConnectLinkController_getIntegrationConnectLink
      parameters:
        - name: integrationConnectLinkId
          required: true
          in: path
          schema:
            type: string
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationConnectLink'
      tags: &ref_4
        - Integration Connect Link
  /v1/integration_connect_link:
    post:
      operationId: IntegrationConnectLinkController_getIntegrationConnectLinksForWorkspace
      parameters:
        - name: workspaceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationConnectLink'
      tags: *ref_4
  /v1/ticketing/collections:
    get:
      operationId: CollectionsController_getCollections
      parameters:
        - required: true
          name: by
          in: query
          schema:
            type: string
        - name: raw
          required: false
          in: query
          schema:
            type: boolean
        - name: cursor
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingCollectionsResponse'
      tags: &ref_5
        - Ticketing
  /v1/ticketing/collections/{collection_id}:
    get:
      operationId: CollectionsController_getCollection
      parameters:
        - name: raw
          required: false
          in: query
          schema:
            type: boolean
        - name: collection_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingCollectionResponse'
      tags: *ref_5
  /v1/ticketing/{collection_id}/users/{user_id}:
    get:
      operationId: UsersController_getUserId
      parameters:
        - name: raw
          required: false
          in: query
          schema:
            type: boolean
        - name: collection_id
          required: true
          in: path
          schema:
            type: string
        - name: user_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingUserResponse'
      tags: &ref_6
        - Ticketing
  /v1/ticketing/{collection_id}/users:
    get:
      operationId: UsersController_getUsers
      parameters:
        - required: true
          name: by
          in: query
          schema:
            type: string
        - name: raw
          required: false
          in: query
          schema:
            type: boolean
        - name: cursor
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: collection_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingUsersResponse'
      tags: *ref_6
  /v1/ticketing/{collection_id}/tickets:
    get:
      operationId: TicketsController_getTickets
      parameters:
        - required: true
          name: by
          in: query
          schema:
            type: string
        - name: raw
          required: false
          in: query
          schema:
            type: boolean
        - name: cursor
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: collection_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingTicketsResponse'
      tags: &ref_7
        - Ticketing
    post:
      operationId: TicketsController_createTicket
      parameters:
        - required: true
          name: by
          in: query
          schema:
            type: string
        - name: raw
          required: false
          in: query
          schema:
            type: boolean
        - name: cursor
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: collection_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingTicketsResponse'
      tags: *ref_7
  /v1/ticketing/{collection_id}/tickets/{ticket_id}:
    get:
      operationId: TicketsController_getTicketId
      parameters:
        - name: raw
          required: false
          in: query
          schema:
            type: boolean
        - name: collection_id
          required: true
          in: path
          schema:
            type: string
        - name: ticket_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingTicketResponse'
      tags: *ref_7
info:
  title: Poozle
  description: The poozle API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserInput:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
      required:
        - email
    User:
      type: object
      properties:
        userId:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        firstname:
          type: string
          nullable: true
        lastname:
          type: string
          nullable: true
        email:
          type: string
        Workspace:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
      required:
        - userId
        - createdAt
        - updatedAt
        - firstname
        - lastname
        - email
    IntegrationConnectLink:
      type: object
      properties:
        integrationConnectionLinkId:
          type: string
        expiresIn:
          type: number
        category:
          type: array
          items:
            type: object
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        IntegrationAccount:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccount'
      required:
        - integrationConnectionLinkId
        - expiresIn
        - category
        - createdAt
        - updatedAt
    IntegrationAccount:
      type: object
      properties:
        integrationAccountId:
          type: string
        integrationDefinition:
          $ref: '#/components/schemas/IntegrationDefinition'
        integrationDefinitionId:
          type: string
        integrationConfiguration:
          type: object
          nullable: true
        authType:
          type: string
        workspace:
          $ref: '#/components/schemas/Workspace'
        workspaceId:
          type: string
        integrationAccountName:
          type: string
        deleted:
          format: date-time
          type: string
          nullable: true
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        fromLinks:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/IntegrationConnectLink'
        integrationConnectLinkIntegrationConnectionLinkId:
          type: string
          nullable: true
      required:
        - integrationAccountId
        - integrationDefinitionId
        - integrationConfiguration
        - authType
        - workspaceId
        - integrationAccountName
        - deleted
        - createdAt
        - updatedAt
        - integrationConnectLinkIntegrationConnectionLinkId
    IntegrationOAuthApp:
      type: object
      properties:
        integrationOAuthAppId:
          type: string
        integrationOAuthAppName:
          type: string
        integrationDefinition:
          $ref: '#/components/schemas/IntegrationDefinition'
        integrationDefinitionId:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        scopes:
          type: string
        workspace:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Workspace'
        workspaceId:
          type: string
          nullable: true
        deleted:
          format: date-time
          type: string
          nullable: true
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - integrationOAuthAppId
        - integrationOAuthAppName
        - integrationDefinitionId
        - clientId
        - clientSecret
        - scopes
        - workspaceId
        - deleted
        - createdAt
        - updatedAt
    IntegrationDefinition:
      type: object
      properties:
        integrationDefinitionId:
          type: string
        name:
          type: string
        key:
          type: string
        icon:
          type: string
          nullable: true
        releaseStage:
          type: object
        sourceUrl:
          type: string
        integrationType:
          type: object
        workspace:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Workspace'
        workspaceId:
          type: string
          nullable: true
        IntegrationAccount:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccount'
        IntegrationOAuthApp:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationOAuthApp'
        deleted:
          format: date-time
          type: string
          nullable: true
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - integrationDefinitionId
        - name
        - key
        - icon
        - releaseStage
        - sourceUrl
        - integrationType
        - workspaceId
        - deleted
        - createdAt
        - updatedAt
    Workspace:
      type: object
      properties:
        workspaceId:
          type: string
        slug:
          type: string
        user:
          $ref: '#/components/schemas/User'
        userId:
          type: string
        initialSetupComplete:
          type: boolean
        anonymousDataCollection:
          type: boolean
        IntegrationDefinition:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationDefinition'
        IntegrationAccount:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationAccount'
        IntegrationOAuthApp:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationOAuthApp'
        deleted:
          format: date-time
          type: string
          nullable: true
      required:
        - workspaceId
        - slug
        - userId
        - initialSetupComplete
        - anonymousDataCollection
        - deleted
    IntegrationCheckBody:
      type: object
      properties:
        integrationDefinitionId:
          type: string
        config:
          type: object
        authType:
          type: string
        workspaceId:
          type: string
      required:
        - integrationDefinitionId
        - config
        - authType
        - workspaceId
    UpdateIntegrationAccountBody:
      type: object
      properties:
        integrationAccountName:
          type: string
        authType:
          type: string
        config:
          type: object
      required:
        - integrationAccountName
        - authType
        - config
    CreateIntegrationAccountBody:
      type: object
      properties:
        integrationDefinitionId:
          type: string
        integrationAccountName:
          type: string
        authType:
          type: string
        workspaceId:
          type: string
        config:
          type: object
      required:
        - integrationDefinitionId
        - integrationAccountName
        - authType
        - workspaceId
        - config
    IntegrationOAuthCreateBody:
      type: object
      properties:
        workspaceId:
          type: string
        integrationDefinitionId:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        scopes:
          type: string
        integrationOAuthAppName:
          type: string
      required:
        - integrationDefinitionId
        - clientId
        - clientSecret
        - scopes
        - integrationOAuthAppName
    IntegrationOAuthRequestUpdateBody:
      type: object
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        scopes:
          type: string
        integrationOAuthAppName:
          type: string
      required:
        - clientId
        - clientSecret
        - scopes
        - integrationOAuthAppName
    CreateIntegrationConnectLinkBody:
      type: object
      properties:
        category:
          type: array
          items:
            type: object
        expires:
          type: number
        workspaceId:
          type: string
      required:
        - category
        - expires
        - workspaceId
    Collection:
      type: object
      properties:
        id:
          type: string
        parent_id:
          type: string
        type:
          type: string
        name:
          type: string
        description:
          type: string
        updated_at:
          type: string
        created_at:
          type: string
      required:
        - id
        - parent_id
        - type
        - name
        - description
        - updated_at
        - created_at
    TicketingCollectionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
        meta:
          type: object
      required:
        - data
        - meta
    TicketingCollectionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Collection'
      required:
        - data
    TicketingUser:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        photo_url:
          type: string
        updated_at:
          type: string
        created_at:
          type: string
      required:
        - id
        - name
        - first_name
        - last_name
        - email
        - photo_url
        - updated_at
        - created_at
    TicketingUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TicketingUser'
      required:
        - data
    TicketingUsersResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TicketingUser'
        meta:
          type: object
      required:
        - data
        - meta
    Ticket:
      type: object
      properties:
        id:
          type: number
        parent_id:
          type: string
        collection_id:
          type: string
        type:
          type: string
        subject:
          type: string
        description:
          type: string
        status:
          type: string
        priority:
          type: string
        ticket_url:
          type: string
        assignees:
          type: array
          items:
            type: object
        updated_at:
          type: string
        created_at:
          type: string
        created_by:
          type: string
        due_date:
          type: string
        completed_at:
          type: string
        tags:
          type: array
          items:
            type: object
      required:
        - id
        - parent_id
        - collection_id
        - type
        - subject
        - description
        - status
        - priority
        - ticket_url
        - assignees
        - updated_at
        - created_at
        - created_by
        - due_date
        - completed_at
        - tags
    TicketingTicketsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        meta:
          type: object
      required:
        - data
        - meta
    TicketingTicketResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Ticket'
      required:
        - data
